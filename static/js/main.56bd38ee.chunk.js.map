{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","App.js","index.js"],"names":["Title","className","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","projectStorage","projectFirestore","timeStamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","a","getDownloadURL","createdAt","add","ProgressBar","setFile","console","log","div","initial","width","animate","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","map","key","layout","whileHover","opacity","onClick","img","src","alt","transition","delay","Modal","selectedImg","classList","contains","y","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56bd38ee.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>PictureGram</h1>\n      <h2>Your Pictures</h2>\n      <p>Click below to add pictures...</p>\n    </div>\n  )\n}\n\nexport default Title;","import * as firebase from 'firebase/app'\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\n\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDfoE3CJrAFtox4ogU0f61zvlcNURJj5WU\",\r\n    authDomain: \"firegram-project-b7fbf.firebaseapp.com\",\r\n    databaseURL: \"https://firegram-project-b7fbf.firebaseio.com\",\r\n    projectId: \"firegram-project-b7fbf\",\r\n    storageBucket: \"firegram-project-b7fbf.appspot.com\",\r\n    messagingSenderId: \"576575852994\",\r\n    appId: \"1:576575852994:web:5376c9a9e859c3bd5c865b\",\r\n    measurementId: \"G-TMV9C34RLR\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  // firebase.analytics();\r\n\r\n  const projectStorage = firebase.storage();\r\n  const projectFirestore = firebase.firestore();\r\n  const timeStamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\n\r\n  export {projectStorage, projectFirestore, timeStamp};","import {useState, useEffect } from 'react';\r\nimport {projectStorage, projectFirestore, timeStamp } from '../firebase/config';\r\n\r\nconst useStorage = (file) => {\r\n    const [progress, setProgress] = useState(0);\r\n    const [error, setError] = useState(null);\r\n    const [url, setUrl] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        // references \r\n        const storageRef = projectStorage.ref(file.name);\r\n        const collectionRef = projectFirestore.collection('images');\r\n\r\n        storageRef.put(file).on('state_changed', (snap) => {\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n            setProgress(percentage);\r\n        }, (error) => {\r\n            setError(error);\r\n        }, async () => {\r\n            const url = await storageRef.getDownloadURL();\r\n            const createdAt = timeStamp();\r\n            collectionRef.add({ url, createdAt })\r\n            setUrl(url);\r\n        })\r\n    }, [file]);\r\n\r\n\r\n    return {progress, url, error}\r\n}\r\n\r\nexport default useStorage;","import React, { useEffect } from 'react';\r\nimport useStorage from '../hooks/useStorage';\r\nimport {motion} from 'framer-motion'\r\n\r\nconst ProgressBar = ({file, setFile}) => {\r\n    const{ url, progress } = useStorage(file);\r\n    console.log(progress, url);\r\n\r\n    useEffect(() => {\r\n        if(url) {\r\n            setFile(null);\r\n        }\r\n    }, [url, setFile])\r\n\r\n    return (\r\n        <motion.div className=\"progress-bar\" initial={{width: 0}} animate={{width: progress + '%'}} ></motion.div>\r\n    );\r\n};\r\n\r\nexport default ProgressBar;","import React, { useState } from 'react';\r\nimport ProgressBar from './ProgressBar';\r\n\r\n\r\nconst UploadForm = () => {\r\n    const [file, setFile] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    const types = ['image/png', 'image/jpeg'];\r\n\r\n    const changeHandler = (e) => {\r\n        let selected = e.target.files[0];\r\n        if(selected && types.includes(selected.type)) {\r\n            setFile(selected);\r\n            setError('');\r\n        } else {\r\n            setFile(null);\r\n            setError('Please select an image file (PNG or JPEG)');\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <form>\r\n            <label>\r\n                <input type=\"file\" onChange={changeHandler}/>\r\n                <span>+</span>\r\n            </label>\r\n            <div className=\"output\">\r\n                {error && <div className=\"error\">{error}</div>}\r\n                {file && <div>{file.name}</div>}\r\n                {file && <ProgressBar file={file} setFile={setFile}/>}\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\n\r\nexport default UploadForm;","import {useState, useEffect} from 'react';\r\nimport { projectFirestore } from '../firebase/config';\r\n\r\n\r\nconst useFirestore = (collection) => {\r\n    const [docs, setDocs] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        const unsub = projectFirestore.collection(collection)\r\n        .orderBy('createdAt', 'desc')\r\n        .onSnapshot((snap) => {\r\n            let documents = [];\r\n            snap.forEach( doc => {\r\n                documents.push({...doc.data(), id: doc.id})\r\n            });\r\n\r\n            setDocs(documents);\r\n        });\r\n\r\n\r\n        return () => unsub();\r\n    }, [collection])\r\n \r\n    return { docs };\r\n}\r\n\r\n\r\nexport default useFirestore;","import React from 'react';\r\nimport useFirestore from '../hooks/useFirestore';\r\nimport { motion } from 'framer-motion';\r\n\r\n\r\nconst ImageGrid = ({setSelectedImg}) => {\r\n    const { docs } = useFirestore('images');\r\n\r\n    console.log(docs);\r\n\r\n\r\n    return (\r\n        <div className=\"img-grid\">\r\n            {docs && docs.map(doc => (\r\n                <motion.div className=\"img-wrap\" key={doc.id} \r\n                layout\r\n                whileHover={{opacity: 1}} \r\n                onClick={() => setSelectedImg(doc.url)}>\r\n                \r\n                <motion.img src={doc.url} alt=\"uploaded pic\" \r\n                    initial={{opacity: 0}} \r\n                    animate={{opacity: 1}}\r\n                    transition={{delay: 1}}\r\n                    \r\n                    />\r\n                </motion.div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ImageGrid;","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\n\r\nconst Modal = ({selectedImg, setSelectedImg}) => {\r\n\r\n    const handleClick = (e) => {\r\n        if(e.target.classList.contains('backdrop')) {\r\n            setSelectedImg(null)\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <motion.div className=\"backdrop\" onClick={handleClick} initial={{opacity: 0}} animate={{opacity:1}}>\r\n            <motion.img src={selectedImg} alt=\"enlarged pic\" initial={{y:\"-100vh\"}} animate={{y: 0}} />\r\n        </motion.div>    \r\n    )\r\n}\r\n\r\n\r\nexport default Modal;","import React, { useState } from 'react';\nimport Title from './comps/Title';\nimport UploadForm from './comps/UploadForm'\nimport ImageGrid from './comps/ImageGrid';\nimport Modal from './comps/Modal';\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null);\n\n\n  return (\n    <div className=\"App\">\n      <Title/>\n      <UploadForm/>\n      <ImageGrid setSelectedImg={setSelectedImg}/>\n      {selectedImg && <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg}/>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}